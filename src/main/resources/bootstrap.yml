spring:
  application:
    name: api-gateway
  cloud:
#    config:
#      label: master
#      profile: dev
#      discovery:
#        enabled: true  # 开启
#        service-id: config-server # 指定配置中心服务端的server-id
     gateway:
       routes:
         - id: host_route1
           uri: http://localhost:8771
           predicates:
             - Path=/a/**
           filters:
             - StripPrefix=1
             - name: CircuitBreaker
               args:
                 name: cacheCustomizer
                 fallbackUri: forward:/fallback
         - id: host_route2
           uri: http://localhost:8772
           predicates:
             - Path=/b/**
           filters:
             - StripPrefix=1
         - id: host_route3
           #此处填写注册中心服务名，大小写不敏感
           uri: lb://eureka-client1
           predicates:
             - Path=/a1/**
           filters:
             - StripPrefix=1
#       default-filters:
#         - name: CircuitBreaker
#           args:
#             name: cacheCustomizer
#             fallbackUri: forward:/fallback

# Eureka配置
eureka:
  instance:
    # eureka服务端的实例名称
    hostname: client
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}:${random.value}
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
logging:
  level:
    org.springframework.cloud.gateway: debug


resilience4j.circuitbreaker:
  configs: #通用配置
    default: # 断路器系统默认配置
      #失败率，错误率达到或高于该值则进入open状态 50
      failureRateThreshold: 20
      #慢调用阀值，请求执行的时间大于该值时会标记为慢调用 60s
      slowCallDurationThreshold: 1s
      #慢调用熔断阀值，当慢调用率达到或高于该值时，进入open状态 100
      slowCallRateThreshold: 3
      #状态滚动收集器大小，close状态时收集多少请求状态，用于计算失败率。 100
      slidingWindowSize: 5
      #状态收集器类型
      #COUNT_BASED：根据数量计算，slidingWindowSize为次数
      #TIME_BASED：根据时间计算，slidingWindowSize为秒数
      slidingWindowType: COUNT_BASED
      #计算错误率的最小请求数，不足最小调用次数不会触发任何变化。10
      minimumNumberOfCalls: 5
      #是否自动进入halfOpen状态，默认false-一定时间后进入halfopen，ture-需要通过接口执行。
      automaticTransitionFromOpenToHalfOpenEnabled: false
      #进入halfOpen状态时，可以被调用次数，就算这些请求的失败率，低于设置的失败率变为close状态，否则变为open。 10
      permittedNumberOfCallsInHalfOpenState: 3
      #open状态变为half状态需要等待的时间，即熔断多久后开始尝试访问被熔断的服务。60s
      waitDurationInOpenState: 60s
      #事件缓冲区大小？？10
      eventConsumerBufferSize: 3
      #被计为失败的异常集合，默认情况下所有异常都为失败。
      recordExceptions:
        - java.lang.Exception
      #不会被计为失败的异常集合，优先级高于recordExceptions。
      ignoreExceptions:
        - java.lang.IllegalStateException
  instances: #熔断器类型
    aCustomizer: #使用默认配置
      baseConfig: default
    cacheCustomizer: #自定义配置
      failureRateThreshold: 10


#resilience4j.timelimiter:
#  configs:
#    default:
#      cancelRunningFuture: true
#      timeoutDuration: 60s
#  instances:
#    testClient:
#      baseConfig: default
#resilience4j.ratelimiter:
#  instances:
#    productRateLimiter:
#      limitForPeriod: 3   ## 每10秒内可用3个
#      limitRefreshPeriod: 10s
#      timeoutDuration: 0